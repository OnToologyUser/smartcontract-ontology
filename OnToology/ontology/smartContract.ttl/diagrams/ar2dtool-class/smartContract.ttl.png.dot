digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "base:GolangContract" "base:ArrayDimension" "base:ElementInArray" "base:SolidityContract" "base:MapElement" "base:Function" "base:Array" "base:Map" "base:SimpleAttribute" "base:Attribute" "base:ElementaryType" "base:PrimitiveType" ; /*classes style*/
	"base:GolangContract" -> "base:SolidityContract" [ label = "owl:disjointWith" ];
	"NULL" -> "base:hasFunction" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasInheritance" [ label = "owl:onProperty" ];
	"NULL" -> "base:Map" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasVisibility" [ label = "owl:onProperty" ];
	"NULL" -> "base:Function" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasGet" [ label = "owl:onProperty" ];
	"NULL" -> "base:PrimitiveType" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:MapElement" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasMapValue" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasMapKey" [ label = "owl:onProperty" ];
	"NULL" -> "base:isConstant" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasParameter" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:boolean" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:ElementInArray" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasAttribute" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasSet" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasLenght" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasFunctionContent" [ label = "owl:onProperty" ];
	"NULL" -> "base:ElementaryType" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:imports" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasArrayDimension" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasSimpleValue" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasArrayElement" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasMapKeyType" [ label = "owl:onProperty" ];
	"NULL" -> "base:Array" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:SimpleAttribute" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:valueType" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:string" [ label = "owl:onDataRange" ];
	"NULL" -> "base:hasMapElement" [ label = "owl:onProperty" ];
	"NULL" -> "base:contain" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasIndex" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:boolean" [ label = "owl:onDataRange" ];
	"NULL" -> "xsd:integer" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:arrayTypeData" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasName" [ label = "owl:onProperty" ];
	"NULL" -> "base:returnType" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasSimpleData" [ label = "owl:onProperty" ];
	"NULL" -> "base:ArrayDimension" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:Attribute" [ label = "owl:someValuesFrom" ];
	"NULL" -> "xsd:string" [ label = "owl:someValuesFrom" ];
	"http://example.smartcontract.es/sc" -> "http://example.smartcontract.es/sc/0.9" [ label = "owl:versionIRI" ];
	"owl:Thing" -> "xsd:boolean" [ label = "base:hasSet" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasVisibility" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasInheritance" ];
	"owl:Thing" -> "rdfs:Literal" [ label = "base:returnType" ];
	"owl:Thing" -> "xsd:integer" [ label = "base:hasIndex" ];
	"owl:Thing" -> "xsd:string" [ label = "base:arrayTypeData" ];
	"owl:Thing" -> "xsd:string" [ label = "base:imports" ];
	"owl:Thing" -> "rdfs:Literal" [ label = "base:hasSimpleValue" ];
	"owl:Thing" -> "xsd:string" [ label = "base:valueType" ];
	"owl:Thing" -> "xsd:boolean" [ label = "base:hasGet" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasName" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasFunctionContent" ];
	"owl:Thing" -> "xsd:boolean" [ label = "base:isConstant" ];
	"owl:Thing" -> "xsd:integer" [ label = "base:hasLenght" ];

}
