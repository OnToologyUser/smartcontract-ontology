digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "base:GolangContract" "base:ArrayDimension" "base:ElementInArray" "base:Visibility" "base:FunctionType" "base:SolidityContract" "base:FunctionModifier" "base:ContractSpecification" "base:MapElement" "base:Function" "base:ComplexTypes" "base:Attribute" "base:ElementaryType" ; /*classes style*/
	"base:hasVisibility" -> "owl:topObjectProperty" [ label = "rdfs:subPropertyOf" ];
	"base:GolangContract" -> "base:SolidityContract" [ label = "owl:disjointWith" ];
	"NULL" -> "base:hasFunction" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasValue" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasInheritance" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasContractReturn" [ label = "owl:onProperty" ];
	"NULL" -> "base:ComplexTypes" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasVisibility" [ label = "owl:onProperty" ];
	"NULL" -> "base:Function" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasGet" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasFunctionModifier" [ label = "owl:onProperty" ];
	"NULL" -> "base:MapElement" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasMapValue" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasMapKey" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasComplexType" [ label = "owl:onProperty" ];
	"NULL" -> "base:ElementInArray" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasAttribute" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasSet" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasLenght" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasFunctionContent" [ label = "owl:onProperty" ];
	"NULL" -> "base:ComplexTypes" [ label = "owl:onClass" ];
	"NULL" -> "base:ElementaryType" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:imports" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasArrayDimension" [ label = "owl:onProperty" ];
	"NULL" -> "base:ContractSpecification" [ label = "owl:onClass" ];
	"NULL" -> "base:element" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasArrayElement" [ label = "owl:onProperty" ];
	"NULL" -> "base:FunctionType" [ label = "owl:onClass" ];
	"NULL" -> "base:hasMapKeyType" [ label = "owl:onProperty" ];
	"NULL" -> "base:FunctionModifier" [ label = "owl:onClass" ];
	"NULL" -> "base:Visibility" [ label = "owl:onClass" ];
	"NULL" -> "xsd:string" [ label = "owl:onDataRange" ];
	"NULL" -> "base:hasMapElement" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasIndex" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:boolean" [ label = "owl:onDataRange" ];
	"NULL" -> "xsd:integer" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasName" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasMapValueType" [ label = "owl:onProperty" ];
	"NULL" -> "base:ArrayDimension" [ label = "owl:someValuesFrom" ];
	"NULL" -> "base:hasReturnFunction" [ label = "owl:onProperty" ];
	"NULL" -> "base:hasData" [ label = "owl:onProperty" ];
	"NULL" -> "base:Attribute" [ label = "owl:someValuesFrom" ];
	"NULL" -> "xsd:string" [ label = "owl:someValuesFrom" ];
	"http://example.smartcontract.es/sc" -> "http://example.smartcontract.es/sc/0.9" [ label = "owl:versionIRI" ];
	"owl:Thing" -> "xsd:boolean" [ label = "base:hasSet" ];
	"owl:Thing" -> "rdfs:Literal" [ label = "base:hasValue" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasVisibility" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasInheritance" ];
	"owl:Thing" -> "rdfs:Literal" [ label = "base:returnType" ];
	"owl:Thing" -> "xsd:integer" [ label = "base:hasIndex" ];
	"owl:Thing" -> "xsd:string" [ label = "base:arrayTypeData" ];
	"owl:Thing" -> "xsd:string" [ label = "base:imports" ];
	"owl:Thing" -> "xsd:boolean" [ label = "base:hasGet" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasName" ];
	"owl:Thing" -> "xsd:string" [ label = "base:hasFunctionContent" ];
	"owl:Thing" -> "xsd:boolean" [ label = "base:isConstant" ];
	"owl:Thing" -> "xsd:integer" [ label = "base:hasLenght" ];

}
